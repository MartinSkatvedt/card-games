import { Flex, Grid, GridItem } from "@chakra-ui/react";
import Head from "next/head";
import CardHand from "../../features/card/CardHand";
import { CardType, CardCategory } from "../../features/card/types/CardType";
import { InferGetServerSidePropsType } from "next";
import dbConnect from "../../lib/mongodb";
import { GameModel } from "../../models/GameMode";

const testCards: CardType[] = [
  {
    value: 2,
    category: CardCategory.CLUBS,
  },
  {
    value: 5,
    category: CardCategory.DIAMONDS,
  },
  {
    value: 11,
    category: CardCategory.SPADES,
  },
  {
    value: 14,
    category: CardCategory.HEARTS,
  },
];

type ContextType = {
  params: any;
};
export async function getServerSideProps(context: ContextType) {
  const { gameId } = context.params;
  try {
    await dbConnect();
    const response = await GameModel.findById(gameId);
    return {
      props: { isConnected: true, data: JSON.stringify(response) },
    };
  } catch (e) {
    console.error(e);
    return {
      props: { isConnected: false, data: ":(" },
    };
  }
}

const Game = ({
  isConnected,
  data,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  console.log(JSON.parse(data));
  return (
    <>
      <Head>
        <title>Game</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {isConnected ? (
          <h2 className="subtitle">You are connected to MongoDB</h2>
        ) : (
          <h2 className="subtitle">
            You are NOT connected to MongoDB. Check the <code>README.md</code>{" "}
            for instructions.
          </h2>
        )}
        <Grid
          border="2px solid white"
          borderRadius="10px"
          w="90%"
          h="95vh"
          maxH="95vh"
          mx="auto"
          my="16px"
          p={4}
          templateRows="repeat(3, 1fr)"
        >
          <GridItem>Opponent</GridItem>
          <GridItem>Deck, current played cards and graveyard</GridItem>
          <GridItem>
            <Flex align="center" justify="center" w="100%" h="100%">
              <CardHand cards={testCards} />
            </Flex>
          </GridItem>
        </Grid>
      </main>
    </>
  );
};

export default Game;
